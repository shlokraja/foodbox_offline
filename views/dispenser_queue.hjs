<html>
<head>
    <link href="css/bootstrap.min.css" rel="stylesheet">
    <!-- Include roboto.css to use the Roboto web font, material.css to include the theme and ripples.css to style the ripple effect -->
    <link href="css/roboto.min.css" rel="stylesheet">
    <link href="css/material.min.css" rel="stylesheet">
    <link href="css/ripples.min.css" rel="stylesheet">
    <link href="css/style.css" rel="stylesheet">
    <title>Orders</title>
    <style type="text/css">
        #orders {
            margin: 20px;
        }

        #home_link {
            margin-left: 20px;
            color: #03a9f4;
            font-size: 15px;
        }

        #orders table tbody td {
            text-transform: capitalize;
            vertical-align: middle;
        }

        #orders table #refund_buttons img {
            width: 30px;
        }

        #orders table tbody td .rupee-img {
            margin-bottom: 2px;
            width: initial;
        }

        #orders table img {
            margin-right: 5px;
        }

        #orders .complete, #orders .cancel {
            margin: 0px;
        }
    </style>
</head>
<body>
    <a id="home_link" class="threads" href="/">&lt; Home</a>
    <div id="orders" class="panel">
        <div class="panel_header">
            <img class="icon" src="img/icons/Orders.png">
            <h4>Dispenser Queue</h4>
        </div>
        <table class="table table-striped table-hover ">
            <thead>
                <tr class="tableheader">
                    <th>Dispense Id</th>
                    <th>Bill Nos</th>
                    <th>Status</th>
                    <th>Counter</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {{#queue}}
                <tr>
                    <td class="dispense_id">{{dispense_id}}</td>
                    <td class="bill_no">{{bill_no}}</td>
                    <td>{{status}}</td>
                    <td>{{target_lane}}</td>
                    <td>
                        {{#timeout}}
                        <a href="javascript:void(0)" class="complete btn btn-default btn-raised" data-order_stub="{{order_stub}}"><img src="img/icons/Delivered.png"><span>Complete</span></a>
                        <a href="javascript:void(0)" class="cancel btn btn-default btn-raised" data-order_stub="{{order_stub}}" data-food_item_id="{{food_item_id}}"><img src="img/icons/Stop.png"><span>Cancel</span></a>
                        {{/timeout}}
                    </td>
                </tr>
                {{/queue}}
            </tbody>
        </table>
    </div>

    <script src="js/jquery.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/ripples.min.js"></script>
    <script src="js/material.min.js"></script>
    <script src="js/socket.io.js"></script>
    <script src="js/simpleStorage.js"></script>

    <script>
        // global variables
        HQ_URL = '{{ hq_url }}';
        OUTLET_ID = '{{ outlet_id }}';
        OUTLET_URL = '{{ outlet_host }}{{ outlet_port }}';
        WEBSOCKET_URL = '{{ outlet_host }}{{ websocket_port }}';
        socket = io.connect(WEBSOCKET_URL);

        setInterval(function ()
        {
            location.reload(true);
        }, 10000);

    </script>
    <script src="js/utils.js"></script>
    <script>
        $(document).ready(function ()
        {
            // Initializing material design
            $.material.init();
        });

        $("#orders .complete").click(function ()
        {
            var order_stub = $(this).attr("data-order_stub");
            var dispense_id = $(this).parent().parent().find(".dispense_id").text();
            // Updating the item status in outlet
            $.ajax({
                type: 'POST',
                url: OUTLET_URL + '/plcio/update_order_item_status',
                data: JSON.stringify({
                    "data": {
                        "dispense_id": dispense_id,
                        "status": "delivered",
                        "order_stub": order_stub
                    }
                }),
                success: function (data)
                {
                    console.log(data);
                    location.reload(true);
                },
                error: function (jqxhr, textStatus, error)
                {
                    var err_msg = textStatus + ", " + jqxhr.responseText;
                    console.error("Updating order status failed: " + err_msg);
                },
                contentType: "application/json",
                dataType: 'text'
            });
        });

        $("#orders .cancel").click(function ()
        {
            var order_stub = $(this).attr("data-order_stub");
            var food_item_id = $(this).attr("data-food_item_id");
            var dispense_id = $(this).parent().parent().find(".dispense_id").text();
            var bill_no = $(this).parent().parent().find(".bill_no").text();
            // Updating the item status in outlet
            $.ajax({
                type: 'POST',
                url: OUTLET_URL + '/plcio/update_order_item_status',
                data: JSON.stringify({
                    "data": {
                        "dispense_id": dispense_id,
                        "status": "delivered",
                        "order_stub": order_stub
                    }
                }),
                success: function (data)
                {
                    console.log(data);
                    // Sending update sms to the customer
                    $.ajax({
                        type: 'POST',
                        url: OUTLET_URL + '/order_app/resend_updated_sms',
                        data: JSON.stringify({ "bill_no": bill_no, "food_item_id": food_item_id }),
                        success: function (data)
                        {
                            console.log(data);
                            // Wiping all bill traces in the HQ
                            $.ajax({
                                type: 'POST',
                                url: HQ_URL + '/outlet/wipe_bill_items',
                                data: JSON.stringify({ "bill_no": bill_no, "food_item_id": food_item_id }),
                                success: function (data)
                                {
                                    console.log(data);
                                    location.reload(true);
                                },
                                error: function (jqxhr, textStatus, error)
                                {
                                    var err_msg = textStatus + ", " + jqxhr.responseText;
                                    console.error("Wiping bill failed: " + err_msg);
                                },
                                contentType: "application/json",
                                dataType: 'text'
                            });
                        },
                        error: function (jqxhr, textStatus, error)
                        {
                            var err_msg = textStatus + ", " + jqxhr.responseText;
                            console.error("Sending updated sms failed: " + err_msg);
                        },
                        contentType: "application/json",
                        dataType: 'text'
                    });


                },
                error: function (jqxhr, textStatus, error)
                {
                    var err_msg = textStatus + ", " + jqxhr.responseText;
                    console.error("Updating order status failed: " + err_msg);
                },
                contentType: "application/json",
                dataType: 'text'
            });
        });
    </script>
</body>
</html>
